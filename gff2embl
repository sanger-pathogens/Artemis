#!/bin/sh -

# Command line utility for coverting GFF to EMBL
PRG=$0
progname=`basename $0`

ARTEMIS_HOME=`dirname "$PRG"`/.

CLASSPATH=$ARTEMIS_HOME:$ARTEMIS_HOME/lib/biojava.jar:$ARTEMIS_HOME/lib/jemAlign.jar:$ARTEMIS_HOME/lib/jakarta-regexp-1.2.jar:$ARTEMIS_HOME/lib/macos.jar:$ARTEMIS_HOME/lib/postgresql-8.4-701.jdbc3.jar:$ARTEMIS_HOME/lib/chado-14-interface.jar:$CLASSPATH

# j2ssh jars
CLASSPATH=$CLASSPATH:$ARTEMIS_HOME/lib/j2ssh/commons-logging.jar:$ARTEMIS_HOME/lib/j2ssh/j2ssh-core.jar:$ARTEMIS_HOME/lib/j2ssh/

# iBatis jars
CLASSPATH=$CLASSPATH:$ARTEMIS_HOME/lib/ibatis/ibatis-2.3.4.726.jar:$ARTEMIS_HOME/lib/ibatis/:$ARTEMIS_HOME/lib/ibatis/log4j-1.2.14.jar:$ARTEMIS_HOME/lib/ibatis/cglib-nodep-2.2.jar:$ARTEMIS_HOME/lib/retrotranslator-runtime-1.1.0.jar
export CLASSPATH

# batik jars
CLASSPATH=$CLASSPATH:$ARTEMIS_HOME/lib/batik/batik-awt-util.jar:$ARTEMIS_HOME/lib/batik/batik-dom.jar:$ARTEMIS_HOME/lib/batik/batik-ext.jar:$ARTEMIS_HOME/lib/batik/batik-svggen.jar:$ARTEMIS_HOME/lib/batik/batik-util.jar:$ARTEMIS_HOME/lib/batik/batik-xml.jar

# picard jars
CLASSPATH=$ARTEMIS_HOME/lib/picard/sam.jar:$ARTEMIS_HOME/lib/picard/picard.jar:$ARTEMIS_HOME/lib/commons-net-2.2.jar:$CLASSPATH
CLASSPATH="$ARTEMIS_HOME/lib/commons-lang-2.6.jar:$CLASSPATH"
export CLASSPATH

if [ $# = 0 ]
then
    :
else
    if [ "$1" = "-h" -o "$1" = "--help" -o "$1" = "-help" ]
    then
        cat <<EOF

SYNOPSIS
        gff2embl
USAGE
        $0 [options] <SEQUENCE_FILE>
OPTIONS
        SEQUENCE_FILE                  A GFF3 file

        -s FILE                  space separated list of GFF files to read and write out
        -o OUTPUT_DIR            output directory
        -f [y/n]                 flatten the gene model, default is y
        -z                       gzip output, default is y
        -a [y|n]                 for EMBL submission format change to n, default is y
EXAMPLES
        % -s /Users/tjc/test.gff -o /Users/tjc
HOMEPAGE
        http://www.sanger.ac.uk/resources/software/artemis/
EOF
        exit 0
    fi
fi

ARTEMIS_PROPERTIES="-Dartemis.environment=UNIX"

# Allow URLs to work from behind firewalls
if [ "$http_proxy" = "" ]
then
  http_proxy=$HTTP_PROXY
fi

if [ "$http_proxy" = "" ]
then
  http_proxy=$HTTP_proxy
fi

if [ "$http_proxy" != "" ]
then
  ARTEMIS_PROPERTIES="$ARTEMIS_PROPERTIES -DproxySet=true "`echo $http_proxy | sed 's/http:\/\/\(.*\):\(.*\)/ -Dhttp.proxyHost=\1 -Dhttp.proxyPort=\2/'`
fi


# "-mx500m" sets the maximum amount of memory that Artemis can use.  This may
# need to be increased when dealing with large files
MEM="-mx500m -ms20m"

if [ "$JVM_FLAGS" = "" ]
then
    FLAGS="$MEM -noverify"
else
    FLAGS="$MEM -noverify $JVM_FLAGS"
fi


FLAGS=$FAST_FLAG$FLAGS

if [ "$JAVA_VM" = "" ]
then
    if [ "$DEBUG" = yes ]
    then
        JAVA=java_g
    else
        JAVA=java
    fi
else
    JAVA=$JAVA_VM
fi

PLATTMP=`uname`
if [ "$PLATTMP" = "Darwin" ]
then
  FLAGS="$FLAGS -Dapple.laf.useScreenMenuBar=true -Dcom.apple.mrj.application.apple.menu.about.name=Circular Plot"
fi

$JAVA $MEM uk.ac.sanger.artemis.io.GffToEMBL $*
